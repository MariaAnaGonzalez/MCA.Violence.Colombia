############################################################
## A. Data manipulation - Prepandemic/Pandemic ##
############################################################

## We are going to:

# 1) Merge databases from 2017, 2018, 2019 and 24.03.2020 in one database:"before" (prepandemic)
# 2) Merge databases from 25.03.2020, 2021, 2022 in one database:"pandemic" (pandemic)
# 3) Merge all our databases to one: "vio.todo"
# 4) Describe the "Pandemic" and "Prepandemic" database according to the protocol's selected variables 

## 1. Set working directory

## 2. Import the databases for each year (last version "c")

load("vio.2022.c.Rds")
load("vio.2021.c.Rds")
load("vio.2020.c.Rds")
load("vio.2019.c.Rds")
load("vio.2018.c.Rds")
load("vio.2017.c.Rds")

## 3.  Filter and divide the 2020 database: "vio.2020.c"

# According to the variable: "periodo.hech" (date of the event) we will divide "vio.2020.b"and create two databases:  
# A) Level Prepandemic:      "vio.2020.before"
# B) Level Pandemic:         "vio.2020.pandemic" 


# A)  Create the dataset: "vio.2020.before" according to the variable label of the variable "periodo.hecho" - "Prepandemic"

vio.2020.before <- vio.2020.c[which(vio.2020.c$periodo.hecho== "Prepandemic"), ]


# Check the range

range(vio.2020.before$fech.hech)

# From "2019-12-29"  ---  "2020-03-24" - Perfect!


# B)  Create the dataset: "vio.2020.pandemic" according to the variable label of the variable "periodo.hecho" - "Pandemic"

vio.2020.pandemic <- vio.2020.c[which(vio.2020.c$periodo.hecho== "Pandemic"), ]


# Check the range

range(vio.2020.pandemic$fech.hech)

# From "2020-03-25"  ---  "2020-01-02" - Perfect!


## 4. Merge databases from 2017, 2018, 2019 and "vio.2020.before" in one database:"before" (prepandemic)

# First check that all dataframes have the same # of variables
# The 2020 dataframes have 2 variables that we don't need anymore: "periodo.hecho", "periodo.not"


# Drop "periodo.hecho" & "periodo.not" from  the dataframe "vio.2020.before"

vio.2020.before <- vio.2020.before %>% select(-periodo.hecho, -periodo.not)


# Drop "periodo.hecho" & "periodo.not" from  the dataframe "vio.2020.pandemic"

vio.2020.pandemic <- vio.2020.pandemic %>% select(-periodo.hecho, -periodo.not)


# Merge databases from 2017, 2018, 2019 and "vio.2020.before" in one database:"before" (prepandemic)

vio.before <- rbind(vio.2017.c, vio.2018.c, vio.2019.c, vio.2020.before)

# Check number of observations and variables


# Merge databases from "vio.2020.pandemic", 2021, 2022 in one database:"pandemic"

vio.pandemic <- rbind(vio.2021.c, vio.2022.c, vio.2020.pandemic)

# Check number of observations and variables



## 5. Merge all dataframes to one: "vio.todo"

# Create a variable in each dataset with the name "periodo" and the levels "Prepandemic" & "Pandemic"

# Create the variable "periodo" with the unique label "Prepandemic" for the database "vio.before"

vio.before$periodo <- c("Prepandemic")

# convert it into factor
vio.before$periodo <- as.factor(vio.before$periodo)



# Create the variable "periodo" with the unique label "Pandemic" for the database "vio.pandemic"

vio.pandemic$periodo <- c("Pandemic")

# convert it into factor
vio.pandemic$periodo <- as.factor(vio.pandemic$periodo)


# Merge all dataframes to one: "vio.todo"

vio.todo <- rbind(vio.before, vio.pandemic)



# 5) Describe the "Pandemic" and "Prepandemic" databases 


#### Prepandemic dataframe - "vio.before"

# A. "fech.not" - notification date

range(vio.before$fech.not)


# B. "fech.hech"  - date of the event 

range(vio.before$fech.hech)



# C. "año" - year (no changes) 

summary(vio.before$año)

# D. "edad" - age 

describe(vio.before$edad)

# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.before$edad.cat, show_na = TRUE)%>%
  adorn_pct_formatting(digits = 1)


# D. "sexo" - sex 

# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.before$sexo, show_na = TRUE)%>%
  adorn_pct_formatting(digits = 1)


# E. "cod.pais" - nationality 

levels(vio.before$cod.pais)

# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.before$cod.pais, show_na = TRUE)%>%
  arrange(desc(n)) %>%  
  adorn_pct_formatting(digits = 1)


# F. "ocup.cat" --- occupation 

# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.before$ocup.cat, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1)



# F. "ss" --- Seguridad social (type of social insurance)

levels(vio.before$ss)

# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.before$ss, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1)



# G. "etnia" - Ethnic groups 

levels(vio.before$etnia)


# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.before$etnia, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1)



# H. "gp.disca" -  Population with physical or cognitive disabilities

# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.before$gp.disca, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1)


# I. "gp.despla" -  Displaced persons due to the internal armed conflict

# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.before$gp.despla, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1)


# J. "gp.migra" -  Migrants

# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.before$gp.migra, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1)


# K. "gp.carce" -  Prison inmates

# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.before$gp.carce, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1)


# L. "gp.gest" -  Pregnants

# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.before$gp.gest, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1)


# M. "gp.indi" -  Homeless people 

# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.before$gp.indi, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1)


# N. "gp.icbf" -  Children under the care of ICBF (Colombian Institute of Family Welfare) 

# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.before$gp.icbf, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1)


# O. "gp.mad.com" -  Community mothers

# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.before$gp.mad.com, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1)


# P. "gp.desmo" -  Demobilized individuals from the internal armed conflict

# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.before$gp.desmo, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1)


# Q. "gp.psi" -  Population in psychiatric centers

# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.before$gp.psi, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1)


# R. "gp.vic.vio" -  Population affected by the internal armed conflict

# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.before$gp.vic.vio, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1)


# S. "dep.ocu.cat"  ---- creation of a secondary variable  ----    dep.ocu.cat ##


# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.before$dep.ocu.cat, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1)


# T. "zona.conf.arm"  ---- armed conflict region ##


# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.before$zona.conf.arm, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1)


# U. "naturaleza". ----- type of violence (missing values correspond to the variable "v.sexual")


# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.before$naturaleza, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1) 



# V. "v.sexual.cat" --- 

levels(vio.before$v.sexual) 


# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.before$v.sexual.cat, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1)


### W.  "tipo.viol" ---- Type of violence

# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.before$tipo.viol, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1)


### X. "mecanismo.cat" ---- 


# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.before$mecanismo.cat, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1)                    



# Y. "escena.cat" ---- location  --- to "escena.cat"


# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.before$escena.cat, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1)                    




# Z. "activi.cat" --- survivor's main activity


# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.before$activi.cat, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1)                    


# A1. orient.sex ---- Survivor's sexual orientation

levels(vio.before$orient.sex)  


# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.before$orient.sex, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1)  


# A2. ident.gen ---- Survivor's gender identity 

levels(vio.before$ident.gen)  


# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.before$ident.gen, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1) 


# A3. "consumo.spa" ---- Consumption of substances - no changes


# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.before$consumo.spa, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1) 



# A4. "jefe.h" ---- Person who is the head of the household - no changes


# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.before$jefe.h, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1) 



# A5. "oh.otros" ---- Presence of alcohol or another substance in the survivor - no changes


# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.before$oh.otros, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1) 



# A6. "antec.vio" ---- Survivors with history of violence - no changes


# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.before$antec.vio, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1) 


# A7. "sexo.agre" - Sex of the agressor 

levels(vio.before$sexo.agre)  

# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.before$sexo.agre, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1) 


# A.8 "rel.fami" - familiar relationship with the agressor -


# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.before$conv.agre, show_na = TRUE)%>%
  adorn_pct_formatting(digits = 1) 



# A.9 "conv.agre" - living with the agressor -

levels (vio.before$conv.agre)


# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.before$conv.agre, show_na = TRUE)%>%
  adorn_pct_formatting(digits = 1) 


# A.10  "r.no.flia.cat" --- Non familiar relation with the agressor --- 

levels (vio.before$r.no.flia)


# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.before$r.no.flia.cat, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1)                    



# # A.11  "relacion" --- We are going to create one variable from "r.no.flia.cat" and "rel.fami"


# Check proportions
tabyl(vio.before$relacion, show_na = TRUE)%>%
  arrange(desc(n)) %>%  
  adorn_pct_formatting(digits = 1)



#################################################

#### Pandemic dataframe - "vio.pandemic"

#################################################




# A. "fech.not" - notification date

range(vio.pandemic$fech.not)



# B. "fech.hech"  - date of the event 

range(vio.pandemic$fech.hech)



# C. "año" - year (no changes) 

summary(vio.pandemic$año)

# D. "edad" - age 

describe(vio.pandemic$edad)

# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.pandemic$edad.cat, show_na = TRUE)%>%
  adorn_pct_formatting(digits = 1)


# D. "sexo" - sex 

# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.pandemic$sexo, show_na = TRUE)%>%
  adorn_pct_formatting(digits = 1)


# E. "cod.pais" - nationality 

levels(vio.pandemic$cod.pais)

# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.pandemic$cod.pais, show_na = TRUE)%>%
  arrange(desc(n)) %>%  
  adorn_pct_formatting(digits = 1)


# F. "ocup.cat" --- occupation 

# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.pandemic$ocup.cat, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1)



# F. "ss" --- Seguridad social (type of social insurance)

levels(vio.pandemic$ss)

# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.pandemic$ss, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1)



# G. "etnia" - Ethnic groups 

levels(vio.pandemic$etnia)


# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.pandemic$etnia, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1)



# H. "gp.disca" -  Population with physical or cognitive disabilities

# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.pandemic$gp.disca, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1)


# I. "gp.despla" -  Displaced persons due to the internal armed conflict

# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.pandemic$gp.despla, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1)


# J. "gp.migra" -  Migrants

# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.pandemic$gp.migra, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1)


# K. "gp.carce" -  Prison inmates

# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.pandemic$gp.carce, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1)


# L. "gp.gest" -  Pregnants

# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.pandemic$gp.gest, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1)


# M. "gp.indi" -  Homeless people 

# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.pandemic$gp.indi, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1)


# N. "gp.icbf" -  Children under the care of ICBF (Colombian Institute of Family Welfare) 

# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.pandemic$gp.icbf, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1)


# O. "gp.mad.com" -  Community mothers

# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.pandemic$gp.mad.com, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1)


# P. "gp.desmo" -  Demobilized individuals from the internal armed conflict

# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.pandemic$gp.desmo, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1)


# Q. "gp.psi" -  Population in psychiatric centers

# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.pandemic$gp.psi, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1)


# R. "gp.vic.vio" -  Population affected by the internal armed conflict

# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.pandemic$gp.vic.vio, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1)


# S. "dep.ocu.cat"  ---- creation of a secondary variable  ----    dep.ocu.cat ##


# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.pandemic$dep.ocu.cat, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1)


# T. "zona.conf.arm"  ---- armed conflict region ##


# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.pandemic$zona.conf.arm, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1)


# U. "naturaleza". ----- type of violence (missing values correspond to the variable "v.sexual")


# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.pandemic$naturaleza, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1) 



# V. "v.sexual.cat" --- 


# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.pandemic$v.sexual.cat, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1)


### W.  "tipo.viol" ---- Type of violence

# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.pandemic$tipo.viol, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1)


### X. "mecanismo.cat" ---- 


# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.pandemic$mecanismo.cat, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1)                    



# Y. "escena.cat" ---- location  --- to "escena.cat"


# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.pandemic$escena.cat, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1)                    




# Z. "activi.cat" --- survivor's main activity


# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.pandemic$activi.cat, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1)                    


# A1. orient.sex ---- Survivor's sexual orientation

levels(vio.pandemic$orient.sex)  


# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.pandemic$orient.sex, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1)  


# A2. ident.gen ---- Survivor's gender identity 

levels(vio.pandemic$ident.gen)  


# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.pandemic$ident.gen, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1) 


# A3. "consumo.spa" ---- Consumption of substances - no changes


# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.pandemic$consumo.spa, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1) 



# A4. "jefe.h" ---- Person who is the head of the household - no changes


# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.pandemic$jefe.h, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1) 



# A5. "oh.otros" ---- Presence of alcohol or another substance in the survivor - no changes


# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.pandemic$oh.otros, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1) 



# A6. "antec.vio" ---- Survivors with history of violence - no changes


# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.pandemic$antec.vio, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1) 


# A7. "sexo.agre" - Sex of the agressor 

levels(vio.pandemic$sexo.agre)  

# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.pandemic$sexo.agre, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1) 


# A.8 "rel.fami" - familiar relationship with the agressor -


# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.pandemic$conv.agre, show_na = TRUE)%>%
  adorn_pct_formatting(digits = 1) 



# A.9 "conv.agre" - living with the agressor -

levels (vio.pandemic$conv.agre)


# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.pandemic$conv.agre, show_na = TRUE)%>%
  adorn_pct_formatting(digits = 1) 


# A.10  "r.no.flia.cat" --- Non familiar relation with the agressor --- 

levels (vio.pandemic$r.no.flia)


# Check proportions, frequencies and missings (with 1 rounded proportions)

tabyl(vio.pandemic$r.no.flia.cat, show_na = TRUE)%>%
  arrange(desc(n)) %>% 
  adorn_pct_formatting(digits = 1)                    



# # A.11  "relacion" --- We are going to create one variable from "r.no.flia.cat" and "rel.fami"


# Check proportions
tabyl(vio.pandemic$relacion, show_na = TRUE)%>%
  arrange(desc(n)) %>%  
  adorn_pct_formatting(digits = 1)



####  Save the new dataframes 


save(vio.todo, file = "vio.todo.Rds")
save(vio.todo, file = "vio.todo.RData")

save(vio.before, file = "vio.before.Rds")
save(vio.before, file = "vio.before.RData")

save(vio.pandemic, file = "vio.pandemic.Rds")
save(vio.pandemic, file = "vio.pandemic.RData")



